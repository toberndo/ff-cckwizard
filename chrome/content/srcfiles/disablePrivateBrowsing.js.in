const Ci = Components.interfaces;
const Cc = Components.classes;

Components.utils.import("resource://gre/modules/XPCOMUtils.jsm");

const HTML= '\
<html xmlns="http://www.w3.org/1999/xhtml">\
  <head>\
    <title>about:privatebrowsing</title>\
    <link rel="stylesheet" href="chrome://global/skin/netError.css" type="text/css" media="all" />\
    <link rel="icon" type="image/png" id="favicon" href="chrome://global/skin/icons/warning-16.png" />\
  </head>\
  <body dir="ltr">\
    <div id="errorPageContainer">\
      <div id="errorTitle">\
        <h1 id="errorTitleText">about:privatebrowsing</h1>\
      </div>\
      <div id="errorLongContent">\
        <div id="errorShortDesc">\
          <p id="errorShortDescText">Private browsing has been disabled by your administrator.</p>\
        </div>\
      </div>\
    </div>\
  </body>\
</html>\
';

const XUL = '<window></window>';

function AboutPBHandler() {}

AboutPBHandler.prototype = {
  newChannel : function (aURI) {
    var ioService = Cc["@mozilla.org/network/io-service;1"].getService();
    ioService = ioService.QueryInterface(Ci.nsIIOService);
    var uri_str = "data:application/xhtml+xml," + HTML;
    var ext_uri = ioService.newURI(uri_str, null, null);
    var ext_channel = ioService.newChannelFromURI(ext_uri);
    return ext_channel;
  },
  getURIFlags : function getURIFlags(aURI) {
    return Ci.nsIAboutModule.URI_SAFE_FOR_UNTRUSTED_CONTENT;
  },

  classDescription: "Disable about:privatebrowsing - CCK",
  contractID: "@mozilla.org/network/protocol/about;1?what=privatebrowsing",
  classID: Components.ID("{64147fda-ed14-49b4-b49a-03a3ed63f1ae}"),
  QueryInterface: XPCOMUtils.generateQI([Ci.nsIAboutModule]),
};

if (XPCOMUtils.generateNSGetFactory)
  var NSGetFactory = XPCOMUtils.generateNSGetFactory([AboutPBHandler]);
else
  var NSGetModule = XPCOMUtils.generateNSGetModule([AboutPBHandler]);
